# Generated by Django 5.2.3 on 2025-07-03 17:49

import datetime
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BookingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Rule name', max_length=100)),
                ('max_duration_hours', models.PositiveIntegerField(default=4, help_text='Maximum booking duration in hours', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(24)])),
                ('daily_booking_limit', models.PositiveIntegerField(default=2, help_text='Maximum bookings per user per day', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('weekly_booking_limit', models.PositiveIntegerField(default=5, help_text='Maximum bookings per user per week', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('max_advance_days', models.PositiveIntegerField(default=14, help_text='How many days in advance users can book', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(365)])),
                ('min_advance_hours', models.PositiveIntegerField(default=2, help_text='Minimum hours in advance required for booking', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(168)])),
                ('min_cancel_hours', models.PositiveIntegerField(default=2, help_text='Minimum hours in advance required for cancellation', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(168)])),
                ('min_modify_hours', models.PositiveIntegerField(default=2, help_text='Minimum hours in advance required for modification', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(168)])),
                ('booking_start_time', models.TimeField(default=datetime.time(7, 0), help_text='Earliest time rooms can be booked')),
                ('booking_end_time', models.TimeField(default=datetime.time(22, 0), help_text='Latest time rooms can be booked')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this rule set is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Booking Rule',
                'verbose_name_plural': 'Booking Rules',
                'db_table': 'booking_rules',
                'ordering': ['-is_active', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='room_images/')),
                ('name', models.CharField(help_text='Room name or identifier', max_length=100)),
                ('room_number', models.CharField(help_text='Unique room number', max_length=50, unique=True)),
                ('capacity', models.PositiveIntegerField(help_text='Maximum number of people the room can accommodate', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)])),
                ('room_type', models.CharField(choices=[('classroom', 'Classroom'), ('lab', 'Laboratory'), ('conference', 'Conference Room'), ('auditorium', 'Auditorium'), ('library', 'Library Room'), ('study', 'Study Room'), ('other', 'Other')], default='classroom', help_text='Type of room', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the room')),
                ('equipment', models.TextField(blank=True, help_text='Available equipment (projector, whiteboard, computers, etc.)')),
                ('availability_status', models.CharField(choices=[('available', 'Available'), ('maintenance', 'Under Maintenance'), ('reserved', 'Reserved'), ('unavailable', 'Unavailable')], default='available', help_text='Current availability status', max_length=20)),
                ('is_available', models.BooleanField(default=True, help_text='Whether the room is active and bookable')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Rooms',
                'db_table': 'rooms',
                'ordering': ['room_number', 'name'],
                'indexes': [models.Index(fields=['room_type'], name='rooms_room_ty_7b8350_idx'), models.Index(fields=['availability_status'], name='rooms_availab_94a3ec_idx'), models.Index(fields=['is_available'], name='rooms_is_avai_77209c_idx')],
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(help_text='Announcement title', max_length=200)),
                ('content', models.TextField(help_text='Announcement content')),
                ('announcement_type', models.CharField(choices=[('general', 'General'), ('maintenance', 'Maintenance'), ('policy', 'Policy Update'), ('emergency', 'Emergency'), ('event', 'Event')], default='general', help_text='Type of announcement', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', help_text='Priority level', max_length=10)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the announcement is active')),
                ('show_until', models.DateTimeField(blank=True, help_text='Show announcement until this date (leave blank for indefinite)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(help_text='Admin who created the announcement', on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Announcement',
                'verbose_name_plural': 'Announcements',
                'db_table': 'announcements',
                'ordering': ['-priority', '-created_at'],
                'indexes': [models.Index(fields=['is_active', 'show_until'], name='announcemen_is_acti_13e55a_idx'), models.Index(fields=['announcement_type'], name='announcemen_announc_b7733d_idx'), models.Index(fields=['priority'], name='announcemen_priorit_370592_idx')],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendees', models.IntegerField(default=1)),
                ('start_time', models.DateTimeField(help_text='Booking start date and time')),
                ('end_time', models.DateTimeField(help_text='Booking end date and time')),
                ('purpose', models.CharField(help_text='Purpose of the booking', max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('completed', 'Completed'), ('no_show', 'No Show')], default='pending', help_text='Current booking status', max_length=20)),
                ('additional_notes', models.TextField(blank=True, help_text='Additional notes or requirements')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(help_text='User who made the booking', on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(help_text='Room being booked', on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='booking.room')),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'db_table': 'bookings',
                'ordering': ['-start_time'],
                'indexes': [models.Index(fields=['user', 'start_time'], name='bookings_user_id_96e935_idx'), models.Index(fields=['room', 'start_time'], name='bookings_room_id_f4fe20_idx'), models.Index(fields=['status'], name='bookings_status_51373b_idx'), models.Index(fields=['start_time', 'end_time'], name='bookings_start_t_b42a03_idx')],
                'constraints': [models.CheckConstraint(check=models.Q(('start_time__lt', models.F('end_time'))), name='start_time_before_end_time')],
            },
        ),
    ]
